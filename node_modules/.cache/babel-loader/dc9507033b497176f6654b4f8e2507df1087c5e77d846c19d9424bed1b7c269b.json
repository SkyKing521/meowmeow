{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skyki\\\\PycharmProjects\\\\musiceblya228\\\\src\\\\components\\\\VoiceChannel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Button, Typography, IconButton, Paper, Avatar, List, ListItem, ListItemAvatar, ListItemText, Slider, Tooltip, Badge, Divider } from '@mui/material';\nimport { Mic as MicIcon, MicOff as MicOffIcon, VolumeUp as VolumeUpIcon, VolumeOff as VolumeOffIcon, Headset as HeadsetIcon, HeadsetOff as HeadsetOffIcon, Settings as SettingsIcon, ScreenShare as ScreenShareIcon, Videocam as VideoIcon, VideocamOff as VideoOffIcon, MoreVert as MoreVertIcon } from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceChannel = ({\n  channelId\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isDeafened, setIsDeafened] = useState(false);\n  const [isVideoEnabled, setIsVideoEnabled] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [volume, setVolume] = useState(100);\n  const [showSettings, setShowSettings] = useState(false);\n  const wsRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const videoStreamRef = useRef(null);\n  const screenStreamRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, []);\n  const connect = async () => {\n    try {\n      // Initialize WebSocket connection\n      wsRef.current = new WebSocket(`ws://${config.SERVER_IP}:${config.SERVER_PORT}/ws/voice/${channelId}?token=${token}`);\n      wsRef.current.onopen = () => {\n        setIsConnected(true);\n        startAudioStream();\n        // Notify server about new participant\n        wsRef.current.send(JSON.stringify({\n          type: 'join',\n          userId: localStorage.getItem('userId')\n        }));\n      };\n      wsRef.current.onclose = () => {\n        setIsConnected(false);\n        stopAudioStream();\n        stopVideoStream();\n        stopScreenShare();\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        disconnect();\n      };\n      wsRef.current.onmessage = async event => {\n        if (event.data instanceof Blob) {\n          const audioData = await event.data.arrayBuffer();\n          playAudio(audioData);\n        } else {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        }\n      };\n    } catch (error) {\n      console.error('Error connecting to voice channel:', error);\n    }\n  };\n  const handleWebSocketMessage = data => {\n    switch (data.type) {\n      case 'participants':\n        setParticipants(data.participants);\n        break;\n      case 'participant_joined':\n        setParticipants(prev => [...prev, data.participant]);\n        break;\n      case 'participant_left':\n        setParticipants(prev => prev.filter(p => p.id !== data.userId));\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n  const disconnect = () => {\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    stopAudioStream();\n    stopVideoStream();\n    stopScreenShare();\n    setIsConnected(false);\n  };\n  const startAudioStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaStreamRef.current = stream;\n\n      // Initialize MediaRecorder\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        var _wsRef$current;\n        if (event.data.size > 0 && ((_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.readyState) === WebSocket.OPEN) {\n          wsRef.current.send(event.data);\n        }\n      };\n\n      // Start recording\n      mediaRecorderRef.current.start(100); // Send data every 100ms\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n    }\n  };\n  const stopAudioStream = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current = null;\n    }\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n  };\n  const startVideoStream = async () => {\n    try {\n      var _wsRef$current2;\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoStreamRef.current = stream;\n      setIsVideoEnabled(true);\n\n      // Send video stream to other participants\n      if (((_wsRef$current2 = wsRef.current) === null || _wsRef$current2 === void 0 ? void 0 : _wsRef$current2.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'video_start',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n  const stopVideoStream = () => {\n    if (videoStreamRef.current) {\n      var _wsRef$current3;\n      videoStreamRef.current.getTracks().forEach(track => track.stop());\n      videoStreamRef.current = null;\n      setIsVideoEnabled(false);\n      if (((_wsRef$current3 = wsRef.current) === null || _wsRef$current3 === void 0 ? void 0 : _wsRef$current3.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'video_stop',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    }\n  };\n  const startScreenShare = async () => {\n    try {\n      var _wsRef$current4;\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenStreamRef.current = stream;\n      setIsScreenSharing(true);\n      if (((_wsRef$current4 = wsRef.current) === null || _wsRef$current4 === void 0 ? void 0 : _wsRef$current4.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'screen_share_start',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    } catch (error) {\n      console.error('Error sharing screen:', error);\n    }\n  };\n  const stopScreenShare = () => {\n    if (screenStreamRef.current) {\n      var _wsRef$current5;\n      screenStreamRef.current.getTracks().forEach(track => track.stop());\n      screenStreamRef.current = null;\n      setIsScreenSharing(false);\n      if (((_wsRef$current5 = wsRef.current) === null || _wsRef$current5 === void 0 ? void 0 : _wsRef$current5.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'screen_share_stop',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    }\n  };\n  const playAudio = audioData => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    audioContextRef.current.decodeAudioData(audioData, buffer => {\n      const source = audioContextRef.current.createBufferSource();\n      const gainNode = audioContextRef.current.createGain();\n      gainNode.gain.value = volume / 100;\n      source.buffer = buffer;\n      source.connect(gainNode);\n      gainNode.connect(audioContextRef.current.destination);\n      source.start(0);\n    });\n  };\n  const toggleMute = () => {\n    if (mediaStreamRef.current) {\n      const audioTrack = mediaStreamRef.current.getAudioTracks()[0];\n      audioTrack.enabled = !audioTrack.enabled;\n      setIsMuted(!isMuted);\n    }\n  };\n  const toggleDeafen = () => {\n    setIsDeafened(!isDeafened);\n    if (audioContextRef.current) {\n      audioContextRef.current.destination.volume = isDeafened ? volume / 100 : 0;\n    }\n  };\n  const toggleVideo = () => {\n    if (isVideoEnabled) {\n      stopVideoStream();\n    } else {\n      startVideoStream();\n    }\n  };\n  const toggleScreenShare = () => {\n    if (isScreenSharing) {\n      stopScreenShare();\n    } else {\n      startScreenShare();\n    }\n  };\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n    if (audioContextRef.current && !isDeafened) {\n      audioContextRef.current.destination.volume = newValue / 100;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        flexGrow: 1,\n        overflow: 'auto',\n        p: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: participants.map(participant => {\n          var _participant$username;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                overlap: \"circular\",\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'right'\n                },\n                badgeContent: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 0.5\n                  },\n                  children: [participant.isMuted && /*#__PURE__*/_jsxDEV(MicOffIcon, {\n                    fontSize: \"small\",\n                    color: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 49\n                  }, this), participant.isDeafened && /*#__PURE__*/_jsxDEV(HeadsetOffIcon, {\n                    fontSize: \"small\",\n                    color: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 49\n                  }, this), participant.isVideoEnabled && /*#__PURE__*/_jsxDEV(VideoIcon, {\n                    fontSize: \"small\",\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 49\n                  }, this), participant.isScreenSharing && /*#__PURE__*/_jsxDEV(ScreenShareIcon, {\n                    fontSize: \"small\",\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 41\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: ((_participant$username = participant.username) === null || _participant$username === void 0 ? void 0 : _participant$username[0]) || '?'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: participant.username || 'Unknown User',\n              secondary: participant.role || 'Member'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)]\n          }, participant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: volume,\n          onChange: handleVolumeChange,\n          min: 0,\n          max: 100,\n          sx: {\n            width: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isMuted ? \"Unmute\" : \"Mute\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: isMuted ? \"error\" : \"default\",\n            onClick: toggleMute,\n            disabled: !isConnected,\n            children: isMuted ? /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isDeafened ? \"Undeafen\" : \"Deafen\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: isDeafened ? \"error\" : \"default\",\n            onClick: toggleDeafen,\n            disabled: !isConnected,\n            children: isDeafened ? /*#__PURE__*/_jsxDEV(HeadsetOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(HeadsetIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isVideoEnabled ? \"Disable Video\" : \"Enable Video\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: isVideoEnabled ? \"primary\" : \"default\",\n            onClick: toggleVideo,\n            disabled: !isConnected,\n            children: isVideoEnabled ? /*#__PURE__*/_jsxDEV(VideoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(VideoOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isScreenSharing ? \"Stop Sharing\" : \"Share Screen\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: isScreenSharing ? \"primary\" : \"default\",\n            onClick: toggleScreenShare,\n            disabled: !isConnected,\n            children: /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Settings\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setShowSettings(!showSettings),\n            disabled: !isConnected,\n            children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: isConnected ? \"error\" : \"primary\",\n          onClick: isConnected ? disconnect : connect,\n          children: isConnected ? \"Disconnect\" : \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceChannel, \"f+92C2FlBX+HDqCap+vX3RiRRZ8=\", false, function () {\n  return [useAuth];\n});\n_c = VoiceChannel;\nexport default VoiceChannel;\nvar _c;\n$RefreshReg$(_c, \"VoiceChannel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Button","Typography","IconButton","Paper","Avatar","List","ListItem","ListItemAvatar","ListItemText","Slider","Tooltip","Badge","Divider","Mic","MicIcon","MicOff","MicOffIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Headset","HeadsetIcon","HeadsetOff","HeadsetOffIcon","Settings","SettingsIcon","ScreenShare","ScreenShareIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","MoreVert","MoreVertIcon","useAuth","config","jsxDEV","_jsxDEV","VoiceChannel","channelId","_s","token","isConnected","setIsConnected","isMuted","setIsMuted","isDeafened","setIsDeafened","isVideoEnabled","setIsVideoEnabled","isScreenSharing","setIsScreenSharing","participants","setParticipants","volume","setVolume","showSettings","setShowSettings","wsRef","mediaStreamRef","audioContextRef","mediaRecorderRef","videoStreamRef","screenStreamRef","disconnect","connect","current","WebSocket","SERVER_IP","SERVER_PORT","onopen","startAudioStream","send","JSON","stringify","type","userId","localStorage","getItem","onclose","stopAudioStream","stopVideoStream","stopScreenShare","onerror","error","console","onmessage","event","data","Blob","audioData","arrayBuffer","playAudio","parse","handleWebSocketMessage","prev","participant","filter","p","id","log","close","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","_wsRef$current","size","readyState","OPEN","start","stop","getTracks","forEach","track","startVideoStream","_wsRef$current2","video","_wsRef$current3","startScreenShare","_wsRef$current4","getDisplayMedia","_wsRef$current5","window","AudioContext","webkitAudioContext","decodeAudioData","buffer","source","createBufferSource","gainNode","createGain","gain","value","destination","toggleMute","audioTrack","getAudioTracks","enabled","toggleDeafen","toggleVideo","toggleScreenShare","handleVolumeChange","newValue","sx","height","display","flexDirection","children","flexGrow","overflow","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","_participant$username","overlap","anchorOrigin","vertical","horizontal","badgeContent","gap","fontSize","color","username","primary","secondary","role","alignItems","onChange","min","max","width","justifyContent","title","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/skyki/PycharmProjects/musiceblya228/src/components/VoiceChannel.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    IconButton,\r\n    Paper,\r\n    Avatar,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Slider,\r\n    Tooltip,\r\n    Badge,\r\n    Divider\r\n} from '@mui/material';\r\nimport {\r\n    Mic as MicIcon,\r\n    MicOff as MicOffIcon,\r\n    VolumeUp as VolumeUpIcon,\r\n    VolumeOff as VolumeOffIcon,\r\n    Headset as HeadsetIcon,\r\n    HeadsetOff as HeadsetOffIcon,\r\n    Settings as SettingsIcon,\r\n    ScreenShare as ScreenShareIcon,\r\n    Videocam as VideoIcon,\r\n    VideocamOff as VideoOffIcon,\r\n    MoreVert as MoreVertIcon\r\n} from '@mui/icons-material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport config from '../config';\r\n\r\nconst VoiceChannel = ({ channelId }) => {\r\n    const { token } = useAuth();\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [isDeafened, setIsDeafened] = useState(false);\r\n    const [isVideoEnabled, setIsVideoEnabled] = useState(false);\r\n    const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n    const [participants, setParticipants] = useState([]);\r\n    const [volume, setVolume] = useState(100);\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    \r\n    const wsRef = useRef(null);\r\n    const mediaStreamRef = useRef(null);\r\n    const audioContextRef = useRef(null);\r\n    const mediaRecorderRef = useRef(null);\r\n    const videoStreamRef = useRef(null);\r\n    const screenStreamRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            disconnect();\r\n        };\r\n    }, []);\r\n\r\n    const connect = async () => {\r\n        try {\r\n            // Initialize WebSocket connection\r\n            wsRef.current = new WebSocket(`ws://${config.SERVER_IP}:${config.SERVER_PORT}/ws/voice/${channelId}?token=${token}`);\r\n\r\n            wsRef.current.onopen = () => {\r\n                setIsConnected(true);\r\n                startAudioStream();\r\n                // Notify server about new participant\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'join',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            };\r\n\r\n            wsRef.current.onclose = () => {\r\n                setIsConnected(false);\r\n                stopAudioStream();\r\n                stopVideoStream();\r\n                stopScreenShare();\r\n            };\r\n\r\n            wsRef.current.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n                disconnect();\r\n            };\r\n\r\n            wsRef.current.onmessage = async (event) => {\r\n                if (event.data instanceof Blob) {\r\n                    const audioData = await event.data.arrayBuffer();\r\n                    playAudio(audioData);\r\n                } else {\r\n                    const data = JSON.parse(event.data);\r\n                    handleWebSocketMessage(data);\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.error('Error connecting to voice channel:', error);\r\n        }\r\n    };\r\n\r\n    const handleWebSocketMessage = (data) => {\r\n        switch (data.type) {\r\n            case 'participants':\r\n                setParticipants(data.participants);\r\n                break;\r\n            case 'participant_joined':\r\n                setParticipants(prev => [...prev, data.participant]);\r\n                break;\r\n            case 'participant_left':\r\n                setParticipants(prev => prev.filter(p => p.id !== data.userId));\r\n                break;\r\n            default:\r\n                console.log('Unknown message type:', data.type);\r\n        }\r\n    };\r\n\r\n    const disconnect = () => {\r\n        if (wsRef.current) {\r\n            wsRef.current.close();\r\n            wsRef.current = null;\r\n        }\r\n        stopAudioStream();\r\n        stopVideoStream();\r\n        stopScreenShare();\r\n        setIsConnected(false);\r\n    };\r\n\r\n    const startAudioStream = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            mediaStreamRef.current = stream;\r\n\r\n            // Initialize MediaRecorder\r\n            mediaRecorderRef.current = new MediaRecorder(stream);\r\n            mediaRecorderRef.current.ondataavailable = (event) => {\r\n                if (event.data.size > 0 && wsRef.current?.readyState === WebSocket.OPEN) {\r\n                    wsRef.current.send(event.data);\r\n                }\r\n            };\r\n\r\n            // Start recording\r\n            mediaRecorderRef.current.start(100); // Send data every 100ms\r\n        } catch (error) {\r\n            console.error('Error accessing microphone:', error);\r\n        }\r\n    };\r\n\r\n    const stopAudioStream = () => {\r\n        if (mediaRecorderRef.current) {\r\n            mediaRecorderRef.current.stop();\r\n            mediaRecorderRef.current = null;\r\n        }\r\n        if (mediaStreamRef.current) {\r\n            mediaStreamRef.current.getTracks().forEach(track => track.stop());\r\n            mediaStreamRef.current = null;\r\n        }\r\n    };\r\n\r\n    const startVideoStream = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n            videoStreamRef.current = stream;\r\n            setIsVideoEnabled(true);\r\n            \r\n            // Send video stream to other participants\r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'video_start',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error accessing camera:', error);\r\n        }\r\n    };\r\n\r\n    const stopVideoStream = () => {\r\n        if (videoStreamRef.current) {\r\n            videoStreamRef.current.getTracks().forEach(track => track.stop());\r\n            videoStreamRef.current = null;\r\n            setIsVideoEnabled(false);\r\n            \r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'video_stop',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    const startScreenShare = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n            screenStreamRef.current = stream;\r\n            setIsScreenSharing(true);\r\n            \r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'screen_share_start',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sharing screen:', error);\r\n        }\r\n    };\r\n\r\n    const stopScreenShare = () => {\r\n        if (screenStreamRef.current) {\r\n            screenStreamRef.current.getTracks().forEach(track => track.stop());\r\n            screenStreamRef.current = null;\r\n            setIsScreenSharing(false);\r\n            \r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'screen_share_stop',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    const playAudio = (audioData) => {\r\n        if (!audioContextRef.current) {\r\n            audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n        }\r\n\r\n        audioContextRef.current.decodeAudioData(audioData, (buffer) => {\r\n            const source = audioContextRef.current.createBufferSource();\r\n            const gainNode = audioContextRef.current.createGain();\r\n            gainNode.gain.value = volume / 100;\r\n            \r\n            source.buffer = buffer;\r\n            source.connect(gainNode);\r\n            gainNode.connect(audioContextRef.current.destination);\r\n            source.start(0);\r\n        });\r\n    };\r\n\r\n    const toggleMute = () => {\r\n        if (mediaStreamRef.current) {\r\n            const audioTrack = mediaStreamRef.current.getAudioTracks()[0];\r\n            audioTrack.enabled = !audioTrack.enabled;\r\n            setIsMuted(!isMuted);\r\n        }\r\n    };\r\n\r\n    const toggleDeafen = () => {\r\n        setIsDeafened(!isDeafened);\r\n        if (audioContextRef.current) {\r\n            audioContextRef.current.destination.volume = isDeafened ? volume / 100 : 0;\r\n        }\r\n    };\r\n\r\n    const toggleVideo = () => {\r\n        if (isVideoEnabled) {\r\n            stopVideoStream();\r\n        } else {\r\n            startVideoStream();\r\n        }\r\n    };\r\n\r\n    const toggleScreenShare = () => {\r\n        if (isScreenSharing) {\r\n            stopScreenShare();\r\n        } else {\r\n            startScreenShare();\r\n        }\r\n    };\r\n\r\n    const handleVolumeChange = (event, newValue) => {\r\n        setVolume(newValue);\r\n        if (audioContextRef.current && !isDeafened) {\r\n            audioContextRef.current.destination.volume = newValue / 100;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            {/* Participants List */}\r\n            <Paper sx={{ flexGrow: 1, overflow: 'auto', p: 2, mb: 2 }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>Participants</Typography>\r\n                <List>\r\n                    {participants.map((participant) => (\r\n                        <ListItem key={participant.id}>\r\n                            <ListItemAvatar>\r\n                                <Badge\r\n                                    overlap=\"circular\"\r\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                    badgeContent={\r\n                                        <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                                            {participant.isMuted && (\r\n                                                <MicOffIcon fontSize=\"small\" color=\"error\" />\r\n                                            )}\r\n                                            {participant.isDeafened && (\r\n                                                <HeadsetOffIcon fontSize=\"small\" color=\"error\" />\r\n                                            )}\r\n                                            {participant.isVideoEnabled && (\r\n                                                <VideoIcon fontSize=\"small\" color=\"primary\" />\r\n                                            )}\r\n                                            {participant.isScreenSharing && (\r\n                                                <ScreenShareIcon fontSize=\"small\" color=\"primary\" />\r\n                                            )}\r\n                                        </Box>\r\n                                    }\r\n                                >\r\n                                    <Avatar>{participant.username?.[0] || '?'}</Avatar>\r\n                                </Badge>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={participant.username || 'Unknown User'}\r\n                                secondary={participant.role || 'Member'}\r\n                            />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n\r\n            {/* Controls */}\r\n            <Paper sx={{ p: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\">Volume</Typography>\r\n                    <Slider\r\n                        value={volume}\r\n                        onChange={handleVolumeChange}\r\n                        min={0}\r\n                        max={100}\r\n                        sx={{ width: 200 }}\r\n                    />\r\n                </Box>\r\n                \r\n                <Divider sx={{ mb: 2 }} />\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2 }}>\r\n                    <Tooltip title={isMuted ? \"Unmute\" : \"Mute\"}>\r\n                        <IconButton\r\n                            color={isMuted ? \"error\" : \"default\"}\r\n                            onClick={toggleMute}\r\n                            disabled={!isConnected}\r\n                        >\r\n                            {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip title={isDeafened ? \"Undeafen\" : \"Deafen\"}>\r\n                        <IconButton\r\n                            color={isDeafened ? \"error\" : \"default\"}\r\n                            onClick={toggleDeafen}\r\n                            disabled={!isConnected}\r\n                        >\r\n                            {isDeafened ? <HeadsetOffIcon /> : <HeadsetIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip title={isVideoEnabled ? \"Disable Video\" : \"Enable Video\"}>\r\n                        <IconButton\r\n                            color={isVideoEnabled ? \"primary\" : \"default\"}\r\n                            onClick={toggleVideo}\r\n                            disabled={!isConnected}\r\n                        >\r\n                            {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip title={isScreenSharing ? \"Stop Sharing\" : \"Share Screen\"}>\r\n                        <IconButton\r\n                            color={isScreenSharing ? \"primary\" : \"default\"}\r\n                            onClick={toggleScreenShare}\r\n                            disabled={!isConnected}\r\n                        >\r\n                            <ScreenShareIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip title=\"Settings\">\r\n                        <IconButton\r\n                            onClick={() => setShowSettings(!showSettings)}\r\n                            disabled={!isConnected}\r\n                        >\r\n                            <SettingsIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    \r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color={isConnected ? \"error\" : \"primary\"}\r\n                        onClick={isConnected ? disconnect : connect}\r\n                    >\r\n                        {isConnected ? \"Disconnect\" : \"Connect\"}\r\n                    </Button>\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default VoiceChannel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}