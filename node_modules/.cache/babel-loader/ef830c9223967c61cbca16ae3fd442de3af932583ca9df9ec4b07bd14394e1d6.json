{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skyki\\\\PycharmProjects\\\\musiceblya228\\\\src\\\\components\\\\VoiceChannel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Button, Typography, IconButton, Paper, Avatar, List, ListItem, ListItemAvatar, ListItemText, Slider, Tooltip, Badge, Divider, Alert } from '@mui/material';\nimport { Mic as MicIcon, MicOff as MicOffIcon, VolumeUp as VolumeUpIcon, VolumeOff as VolumeOffIcon, Headset as HeadsetIcon, HeadsetOff as HeadsetOffIcon, Settings as SettingsIcon, ScreenShare as ScreenShareIcon, Videocam as VideoIcon, VideocamOff as VideoOffIcon, MoreVert as MoreVertIcon } from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceChannel = ({\n  channelId\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isDeafened, setIsDeafened] = useState(false);\n  const [isVideoEnabled, setIsVideoEnabled] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [volume, setVolume] = useState(100);\n  const [showSettings, setShowSettings] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected'); // 'disconnected', 'connecting', 'connected'\n  const [error, setError] = useState('');\n  const wsRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const videoStreamRef = useRef(null);\n  const screenStreamRef = useRef(null);\n  useEffect(() => {\n    connect();\n    return () => {\n      disconnect();\n    };\n  }, [channelId]); // Reconnect when channel changes\n\n  const connect = async () => {\n    try {\n      setConnectionStatus('connecting');\n      setError('');\n\n      // Initialize WebSocket connection\n      wsRef.current = new WebSocket(`ws://${config.SERVER_IP}:${config.SERVER_PORT}/ws/voice/${channelId}?token=${token}`);\n      wsRef.current.onopen = () => {\n        setConnectionStatus('connected');\n        setIsConnected(true);\n        startAudioStream();\n        // Notify server about new participant\n        wsRef.current.send(JSON.stringify({\n          type: 'join',\n          userId: localStorage.getItem('userId')\n        }));\n      };\n      wsRef.current.onclose = () => {\n        setConnectionStatus('disconnected');\n        setIsConnected(false);\n        stopAudioStream();\n        stopVideoStream();\n        stopScreenShare();\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setError('Failed to connect to voice channel');\n        setConnectionStatus('disconnected');\n        disconnect();\n      };\n      wsRef.current.onmessage = async event => {\n        if (event.data instanceof Blob) {\n          const audioData = await event.data.arrayBuffer();\n          playAudio(audioData);\n        } else {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        }\n      };\n    } catch (error) {\n      console.error('Error connecting to voice channel:', error);\n      setError('Failed to connect to voice channel');\n      setConnectionStatus('disconnected');\n    }\n  };\n  const handleWebSocketMessage = data => {\n    switch (data.type) {\n      case 'participants':\n        setParticipants(data.participants);\n        break;\n      case 'participant_joined':\n        setParticipants(prev => [...prev, data.participant]);\n        break;\n      case 'participant_left':\n        setParticipants(prev => prev.filter(p => p.id !== data.userId));\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n  const disconnect = () => {\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    stopAudioStream();\n    stopVideoStream();\n    stopScreenShare();\n    setIsConnected(false);\n  };\n  const startAudioStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaStreamRef.current = stream;\n\n      // Initialize MediaRecorder\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        var _wsRef$current;\n        if (event.data.size > 0 && ((_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.readyState) === WebSocket.OPEN) {\n          wsRef.current.send(event.data);\n        }\n      };\n\n      // Start recording\n      mediaRecorderRef.current.start(100); // Send data every 100ms\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n    }\n  };\n  const stopAudioStream = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current = null;\n    }\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n  };\n  const startVideoStream = async () => {\n    try {\n      var _wsRef$current2;\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoStreamRef.current = stream;\n      setIsVideoEnabled(true);\n\n      // Send video stream to other participants\n      if (((_wsRef$current2 = wsRef.current) === null || _wsRef$current2 === void 0 ? void 0 : _wsRef$current2.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'video_start',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n  const stopVideoStream = () => {\n    if (videoStreamRef.current) {\n      var _wsRef$current3;\n      videoStreamRef.current.getTracks().forEach(track => track.stop());\n      videoStreamRef.current = null;\n      setIsVideoEnabled(false);\n      if (((_wsRef$current3 = wsRef.current) === null || _wsRef$current3 === void 0 ? void 0 : _wsRef$current3.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'video_stop',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    }\n  };\n  const startScreenShare = async () => {\n    try {\n      var _wsRef$current4;\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenStreamRef.current = stream;\n      setIsScreenSharing(true);\n      if (((_wsRef$current4 = wsRef.current) === null || _wsRef$current4 === void 0 ? void 0 : _wsRef$current4.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'screen_share_start',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    } catch (error) {\n      console.error('Error sharing screen:', error);\n    }\n  };\n  const stopScreenShare = () => {\n    if (screenStreamRef.current) {\n      var _wsRef$current5;\n      screenStreamRef.current.getTracks().forEach(track => track.stop());\n      screenStreamRef.current = null;\n      setIsScreenSharing(false);\n      if (((_wsRef$current5 = wsRef.current) === null || _wsRef$current5 === void 0 ? void 0 : _wsRef$current5.readyState) === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'screen_share_stop',\n          userId: localStorage.getItem('userId')\n        }));\n      }\n    }\n  };\n  const playAudio = audioData => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    audioContextRef.current.decodeAudioData(audioData, buffer => {\n      const source = audioContextRef.current.createBufferSource();\n      const gainNode = audioContextRef.current.createGain();\n      gainNode.gain.value = volume / 100;\n      source.buffer = buffer;\n      source.connect(gainNode);\n      gainNode.connect(audioContextRef.current.destination);\n      source.start(0);\n    });\n  };\n  const toggleMute = () => {\n    if (mediaStreamRef.current) {\n      const audioTrack = mediaStreamRef.current.getAudioTracks()[0];\n      audioTrack.enabled = !audioTrack.enabled;\n      setIsMuted(!isMuted);\n    }\n  };\n  const toggleDeafen = () => {\n    setIsDeafened(!isDeafened);\n    if (audioContextRef.current) {\n      audioContextRef.current.destination.volume = isDeafened ? volume / 100 : 0;\n    }\n  };\n  const toggleVideo = () => {\n    if (isVideoEnabled) {\n      stopVideoStream();\n    } else {\n      startVideoStream();\n    }\n  };\n  const toggleScreenShare = () => {\n    if (isScreenSharing) {\n      stopScreenShare();\n    } else {\n      startScreenShare();\n    }\n  };\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n    if (audioContextRef.current && !isDeafened) {\n      audioContextRef.current.destination.volume = newValue / 100;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      bgcolor: 'background.paper'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this), connectionStatus === 'connecting' && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 2\n      },\n      children: \"Connecting to voice channel...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        flex: 1,\n        overflow: 'auto'\n      },\n      children: participants.map(participant => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            overlap: \"circular\",\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            badgeContent: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 12,\n                height: 12,\n                borderRadius: '50%',\n                bgcolor: participant.isMuted ? 'error.main' : 'success.main',\n                border: '2px solid',\n                borderColor: 'background.paper'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 37\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: participant.username[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: participant.username,\n          secondary: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [participant.isMuted && /*#__PURE__*/_jsxDEV(MicOffIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 61\n            }, this), participant.isDeafened && /*#__PURE__*/_jsxDEV(HeadsetOffIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 64\n            }, this), participant.isVideoEnabled && /*#__PURE__*/_jsxDEV(VideoIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 68\n            }, this), participant.isScreenSharing && /*#__PURE__*/_jsxDEV(ScreenShareIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)]\n      }, participant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderTop: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isMuted ? \"Unmute\" : \"Mute\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleMute,\n            color: isMuted ? \"error\" : \"default\",\n            children: isMuted ? /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isDeafened ? \"Undeafen\" : \"Deafen\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleDeafen,\n            color: isDeafened ? \"error\" : \"default\",\n            children: isDeafened ? /*#__PURE__*/_jsxDEV(HeadsetOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(HeadsetIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isVideoEnabled ? \"Disable Video\" : \"Enable Video\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleVideo,\n            color: isVideoEnabled ? \"primary\" : \"default\",\n            children: isVideoEnabled ? /*#__PURE__*/_jsxDEV(VideoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(VideoOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isScreenSharing ? \"Stop Sharing\" : \"Share Screen\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleScreenShare,\n            color: isScreenSharing ? \"primary\" : \"default\",\n            children: /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: volume,\n          onChange: handleVolumeChange,\n          \"aria-labelledby\": \"volume-slider\",\n          min: 0,\n          max: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceChannel, \"fzk853g2et6HqnFloV+OkR5X69Q=\", false, function () {\n  return [useAuth];\n});\n_c = VoiceChannel;\nexport default VoiceChannel;\nvar _c;\n$RefreshReg$(_c, \"VoiceChannel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Button","Typography","IconButton","Paper","Avatar","List","ListItem","ListItemAvatar","ListItemText","Slider","Tooltip","Badge","Divider","Alert","Mic","MicIcon","MicOff","MicOffIcon","VolumeUp","VolumeUpIcon","VolumeOff","VolumeOffIcon","Headset","HeadsetIcon","HeadsetOff","HeadsetOffIcon","Settings","SettingsIcon","ScreenShare","ScreenShareIcon","Videocam","VideoIcon","VideocamOff","VideoOffIcon","MoreVert","MoreVertIcon","useAuth","config","jsxDEV","_jsxDEV","VoiceChannel","channelId","_s","token","isConnected","setIsConnected","isMuted","setIsMuted","isDeafened","setIsDeafened","isVideoEnabled","setIsVideoEnabled","isScreenSharing","setIsScreenSharing","participants","setParticipants","volume","setVolume","showSettings","setShowSettings","connectionStatus","setConnectionStatus","error","setError","wsRef","mediaStreamRef","audioContextRef","mediaRecorderRef","videoStreamRef","screenStreamRef","connect","disconnect","current","WebSocket","SERVER_IP","SERVER_PORT","onopen","startAudioStream","send","JSON","stringify","type","userId","localStorage","getItem","onclose","stopAudioStream","stopVideoStream","stopScreenShare","onerror","console","onmessage","event","data","Blob","audioData","arrayBuffer","playAudio","parse","handleWebSocketMessage","prev","participant","filter","p","id","log","close","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","_wsRef$current","size","readyState","OPEN","start","stop","getTracks","forEach","track","startVideoStream","_wsRef$current2","video","_wsRef$current3","startScreenShare","_wsRef$current4","getDisplayMedia","_wsRef$current5","window","AudioContext","webkitAudioContext","decodeAudioData","buffer","source","createBufferSource","gainNode","createGain","gain","value","destination","toggleMute","audioTrack","getAudioTracks","enabled","toggleDeafen","toggleVideo","toggleScreenShare","handleVolumeChange","newValue","sx","display","flexDirection","height","bgcolor","children","severity","mb","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflow","map","overlap","anchorOrigin","vertical","horizontal","badgeContent","width","borderRadius","border","borderColor","username","primary","secondary","alignItems","gap","fontSize","borderTop","justifyContent","title","onClick","color","minWidth","onChange","min","max","_c","$RefreshReg$"],"sources":["C:/Users/skyki/PycharmProjects/musiceblya228/src/components/VoiceChannel.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    IconButton,\r\n    Paper,\r\n    Avatar,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Slider,\r\n    Tooltip,\r\n    Badge,\r\n    Divider,\r\n    Alert\r\n} from '@mui/material';\r\nimport {\r\n    Mic as MicIcon,\r\n    MicOff as MicOffIcon,\r\n    VolumeUp as VolumeUpIcon,\r\n    VolumeOff as VolumeOffIcon,\r\n    Headset as HeadsetIcon,\r\n    HeadsetOff as HeadsetOffIcon,\r\n    Settings as SettingsIcon,\r\n    ScreenShare as ScreenShareIcon,\r\n    Videocam as VideoIcon,\r\n    VideocamOff as VideoOffIcon,\r\n    MoreVert as MoreVertIcon\r\n} from '@mui/icons-material';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport config from '../config';\r\n\r\nconst VoiceChannel = ({ channelId }) => {\r\n    const { token } = useAuth();\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [isDeafened, setIsDeafened] = useState(false);\r\n    const [isVideoEnabled, setIsVideoEnabled] = useState(false);\r\n    const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n    const [participants, setParticipants] = useState([]);\r\n    const [volume, setVolume] = useState(100);\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [connectionStatus, setConnectionStatus] = useState('disconnected'); // 'disconnected', 'connecting', 'connected'\r\n    const [error, setError] = useState('');\r\n    \r\n    const wsRef = useRef(null);\r\n    const mediaStreamRef = useRef(null);\r\n    const audioContextRef = useRef(null);\r\n    const mediaRecorderRef = useRef(null);\r\n    const videoStreamRef = useRef(null);\r\n    const screenStreamRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        connect();\r\n        return () => {\r\n            disconnect();\r\n        };\r\n    }, [channelId]); // Reconnect when channel changes\r\n\r\n    const connect = async () => {\r\n        try {\r\n            setConnectionStatus('connecting');\r\n            setError('');\r\n\r\n            // Initialize WebSocket connection\r\n            wsRef.current = new WebSocket(`ws://${config.SERVER_IP}:${config.SERVER_PORT}/ws/voice/${channelId}?token=${token}`);\r\n\r\n            wsRef.current.onopen = () => {\r\n                setConnectionStatus('connected');\r\n                setIsConnected(true);\r\n                startAudioStream();\r\n                // Notify server about new participant\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'join',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            };\r\n\r\n            wsRef.current.onclose = () => {\r\n                setConnectionStatus('disconnected');\r\n                setIsConnected(false);\r\n                stopAudioStream();\r\n                stopVideoStream();\r\n                stopScreenShare();\r\n            };\r\n\r\n            wsRef.current.onerror = (error) => {\r\n                console.error('WebSocket error:', error);\r\n                setError('Failed to connect to voice channel');\r\n                setConnectionStatus('disconnected');\r\n                disconnect();\r\n            };\r\n\r\n            wsRef.current.onmessage = async (event) => {\r\n                if (event.data instanceof Blob) {\r\n                    const audioData = await event.data.arrayBuffer();\r\n                    playAudio(audioData);\r\n                } else {\r\n                    const data = JSON.parse(event.data);\r\n                    handleWebSocketMessage(data);\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.error('Error connecting to voice channel:', error);\r\n            setError('Failed to connect to voice channel');\r\n            setConnectionStatus('disconnected');\r\n        }\r\n    };\r\n\r\n    const handleWebSocketMessage = (data) => {\r\n        switch (data.type) {\r\n            case 'participants':\r\n                setParticipants(data.participants);\r\n                break;\r\n            case 'participant_joined':\r\n                setParticipants(prev => [...prev, data.participant]);\r\n                break;\r\n            case 'participant_left':\r\n                setParticipants(prev => prev.filter(p => p.id !== data.userId));\r\n                break;\r\n            default:\r\n                console.log('Unknown message type:', data.type);\r\n        }\r\n    };\r\n\r\n    const disconnect = () => {\r\n        if (wsRef.current) {\r\n            wsRef.current.close();\r\n            wsRef.current = null;\r\n        }\r\n        stopAudioStream();\r\n        stopVideoStream();\r\n        stopScreenShare();\r\n        setIsConnected(false);\r\n    };\r\n\r\n    const startAudioStream = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            mediaStreamRef.current = stream;\r\n\r\n            // Initialize MediaRecorder\r\n            mediaRecorderRef.current = new MediaRecorder(stream);\r\n            mediaRecorderRef.current.ondataavailable = (event) => {\r\n                if (event.data.size > 0 && wsRef.current?.readyState === WebSocket.OPEN) {\r\n                    wsRef.current.send(event.data);\r\n                }\r\n            };\r\n\r\n            // Start recording\r\n            mediaRecorderRef.current.start(100); // Send data every 100ms\r\n        } catch (error) {\r\n            console.error('Error accessing microphone:', error);\r\n        }\r\n    };\r\n\r\n    const stopAudioStream = () => {\r\n        if (mediaRecorderRef.current) {\r\n            mediaRecorderRef.current.stop();\r\n            mediaRecorderRef.current = null;\r\n        }\r\n        if (mediaStreamRef.current) {\r\n            mediaStreamRef.current.getTracks().forEach(track => track.stop());\r\n            mediaStreamRef.current = null;\r\n        }\r\n    };\r\n\r\n    const startVideoStream = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n            videoStreamRef.current = stream;\r\n            setIsVideoEnabled(true);\r\n            \r\n            // Send video stream to other participants\r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'video_start',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error accessing camera:', error);\r\n        }\r\n    };\r\n\r\n    const stopVideoStream = () => {\r\n        if (videoStreamRef.current) {\r\n            videoStreamRef.current.getTracks().forEach(track => track.stop());\r\n            videoStreamRef.current = null;\r\n            setIsVideoEnabled(false);\r\n            \r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'video_stop',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    const startScreenShare = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n            screenStreamRef.current = stream;\r\n            setIsScreenSharing(true);\r\n            \r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'screen_share_start',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sharing screen:', error);\r\n        }\r\n    };\r\n\r\n    const stopScreenShare = () => {\r\n        if (screenStreamRef.current) {\r\n            screenStreamRef.current.getTracks().forEach(track => track.stop());\r\n            screenStreamRef.current = null;\r\n            setIsScreenSharing(false);\r\n            \r\n            if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n                wsRef.current.send(JSON.stringify({\r\n                    type: 'screen_share_stop',\r\n                    userId: localStorage.getItem('userId')\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    const playAudio = (audioData) => {\r\n        if (!audioContextRef.current) {\r\n            audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n        }\r\n\r\n        audioContextRef.current.decodeAudioData(audioData, (buffer) => {\r\n            const source = audioContextRef.current.createBufferSource();\r\n            const gainNode = audioContextRef.current.createGain();\r\n            gainNode.gain.value = volume / 100;\r\n            \r\n            source.buffer = buffer;\r\n            source.connect(gainNode);\r\n            gainNode.connect(audioContextRef.current.destination);\r\n            source.start(0);\r\n        });\r\n    };\r\n\r\n    const toggleMute = () => {\r\n        if (mediaStreamRef.current) {\r\n            const audioTrack = mediaStreamRef.current.getAudioTracks()[0];\r\n            audioTrack.enabled = !audioTrack.enabled;\r\n            setIsMuted(!isMuted);\r\n        }\r\n    };\r\n\r\n    const toggleDeafen = () => {\r\n        setIsDeafened(!isDeafened);\r\n        if (audioContextRef.current) {\r\n            audioContextRef.current.destination.volume = isDeafened ? volume / 100 : 0;\r\n        }\r\n    };\r\n\r\n    const toggleVideo = () => {\r\n        if (isVideoEnabled) {\r\n            stopVideoStream();\r\n        } else {\r\n            startVideoStream();\r\n        }\r\n    };\r\n\r\n    const toggleScreenShare = () => {\r\n        if (isScreenSharing) {\r\n            stopScreenShare();\r\n        } else {\r\n            startScreenShare();\r\n        }\r\n    };\r\n\r\n    const handleVolumeChange = (event, newValue) => {\r\n        setVolume(newValue);\r\n        if (audioContextRef.current && !isDeafened) {\r\n            audioContextRef.current.destination.volume = newValue / 100;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            bgcolor: 'background.paper'\r\n        }}>\r\n            {/* Connection Status */}\r\n            {error && (\r\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n            \r\n            {connectionStatus === 'connecting' && (\r\n                <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                    Connecting to voice channel...\r\n                </Alert>\r\n            )}\r\n\r\n            {/* Participants List */}\r\n            <List sx={{ flex: 1, overflow: 'auto' }}>\r\n                {participants.map((participant) => (\r\n                    <ListItem key={participant.id}>\r\n                        <ListItemAvatar>\r\n                            <Badge\r\n                                overlap=\"circular\"\r\n                                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                                badgeContent={\r\n                                    <Box sx={{ \r\n                                        width: 12, \r\n                                        height: 12, \r\n                                        borderRadius: '50%',\r\n                                        bgcolor: participant.isMuted ? 'error.main' : 'success.main',\r\n                                        border: '2px solid',\r\n                                        borderColor: 'background.paper'\r\n                                    }} />\r\n                                }\r\n                            >\r\n                                <Avatar>{participant.username[0]}</Avatar>\r\n                            </Badge>\r\n                        </ListItemAvatar>\r\n                        <ListItemText \r\n                            primary={participant.username}\r\n                            secondary={\r\n                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                    {participant.isMuted && <MicOffIcon fontSize=\"small\" />}\r\n                                    {participant.isDeafened && <HeadsetOffIcon fontSize=\"small\" />}\r\n                                    {participant.isVideoEnabled && <VideoIcon fontSize=\"small\" />}\r\n                                    {participant.isScreenSharing && <ScreenShareIcon fontSize=\"small\" />}\r\n                                </Box>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n            {/* Controls */}\r\n            <Box sx={{ \r\n                p: 2, \r\n                borderTop: 1, \r\n                borderColor: 'divider',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n            }}>\r\n                <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Tooltip title={isMuted ? \"Unmute\" : \"Mute\"}>\r\n                        <IconButton onClick={toggleMute} color={isMuted ? \"error\" : \"default\"}>\r\n                            {isMuted ? <MicOffIcon /> : <MicIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={isDeafened ? \"Undeafen\" : \"Deafen\"}>\r\n                        <IconButton onClick={toggleDeafen} color={isDeafened ? \"error\" : \"default\"}>\r\n                            {isDeafened ? <HeadsetOffIcon /> : <HeadsetIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Box>\r\n\r\n                <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Tooltip title={isVideoEnabled ? \"Disable Video\" : \"Enable Video\"}>\r\n                        <IconButton onClick={toggleVideo} color={isVideoEnabled ? \"primary\" : \"default\"}>\r\n                            {isVideoEnabled ? <VideoIcon /> : <VideoOffIcon />}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={isScreenSharing ? \"Stop Sharing\" : \"Share Screen\"}>\r\n                        <IconButton onClick={toggleScreenShare} color={isScreenSharing ? \"primary\" : \"default\"}>\r\n                            <ScreenShareIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Box>\r\n\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, minWidth: 200 }}>\r\n                    <VolumeUpIcon />\r\n                    <Slider\r\n                        value={volume}\r\n                        onChange={handleVolumeChange}\r\n                        aria-labelledby=\"volume-slider\"\r\n                        min={0}\r\n                        max={100}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default VoiceChannel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}