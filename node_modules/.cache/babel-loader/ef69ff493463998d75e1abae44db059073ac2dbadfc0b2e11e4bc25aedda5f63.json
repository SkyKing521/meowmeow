{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skyki\\\\PycharmProjects\\\\musiceblya228\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Configure axios defaults\n  axios.defaults.baseURL = config.API_BASE_URL;\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n\n  // Add response interceptor for token refresh\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const originalRequest = error.config;\n\n      // If error is 401 and we haven't tried to refresh token yet\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          // Clear invalid token\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n          delete axios.defaults.headers.common['Authorization'];\n\n          // Redirect to login or show error\n          setError('Session expired. Please login again.');\n          return Promise.reject(error);\n        } catch (refreshError) {\n          console.error('Token refresh failed:', refreshError);\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, []);\n  const checkAuth = async () => {\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get('/users/me/');\n      setUser(response.data);\n      setError(null);\n    } catch (error) {\n      var _error$response2;\n      console.error('Auth check error:', error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        logout();\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    checkAuth();\n  }, [token]);\n  const register = async (email, password, username) => {\n    try {\n      setError(null);\n\n      // Debug logging\n      console.log('Registration attempt:');\n      console.log('Email:', email);\n      console.log('Username:', username);\n      console.log('Password length:', password.length);\n\n      // Validate email format\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        throw new Error('Please enter a valid email address');\n      }\n\n      // Validate username\n      if (username.length < 3 || username.length > 32) {\n        throw new Error('Username must be between 3 and 32 characters long');\n      }\n\n      // Register user\n      console.log('Sending registration request...');\n      const response = await axios.post('/users/', {\n        email,\n        password,\n        username\n      });\n      console.log('Registration response:', response.data);\n\n      // Auto login after successful registration\n      await login(email, password);\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Registration error:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message;\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setError(null);\n\n      // Debug logging\n      console.log('Login attempt:');\n      console.log('Email:', email);\n      console.log('Password length:', password.length);\n\n      // Validate email format\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        throw new Error('Please enter a valid email address');\n      }\n\n      // Login user\n      console.log('Sending login request...');\n      const response = await axios.post('/token', {\n        username: email,\n        password: password\n      });\n      console.log('Login response:', response.data);\n\n      // Store token\n      const token = response.data.access_token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Get user data\n      const userResponse = await axios.get('/users/me');\n      console.log('User data:', userResponse.data);\n\n      // Update auth state\n      setUser(userResponse.data);\n      setToken(token);\n      return {\n        success: true,\n        user: userResponse.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Login error:', error);\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || error.message;\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setError(null);\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iLpaRsBcvK5kw9CoUYngETMeKsY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","config","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","defaults","baseURL","API_BASE_URL","headers","common","interceptor","interceptors","response","use","_error$response","originalRequest","status","_retry","removeItem","Promise","reject","refreshError","console","eject","checkAuth","get","data","_error$response2","logout","register","email","password","username","log","length","emailRegex","test","Error","post","login","_error$response3","_error$response3$data","errorMessage","detail","message","access_token","setItem","userResponse","success","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/skyki/PycharmProjects/musiceblya228/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Configure axios defaults\r\n    axios.defaults.baseURL = config.API_BASE_URL;\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    // Add response interceptor for token refresh\r\n    useEffect(() => {\r\n        const interceptor = axios.interceptors.response.use(\r\n            (response) => response,\r\n            async (error) => {\r\n                const originalRequest = error.config;\r\n\r\n                // If error is 401 and we haven't tried to refresh token yet\r\n                if (error.response?.status === 401 && !originalRequest._retry) {\r\n                    originalRequest._retry = true;\r\n\r\n                    try {\r\n                        // Clear invalid token\r\n                        localStorage.removeItem('token');\r\n                        setToken(null);\r\n                        setUser(null);\r\n                        delete axios.defaults.headers.common['Authorization'];\r\n                        \r\n                        // Redirect to login or show error\r\n                        setError('Session expired. Please login again.');\r\n                        return Promise.reject(error);\r\n                    } catch (refreshError) {\r\n                        console.error('Token refresh failed:', refreshError);\r\n                        return Promise.reject(refreshError);\r\n                    }\r\n                }\r\n\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            axios.interceptors.response.eject(interceptor);\r\n        };\r\n    }, []);\r\n\r\n    const checkAuth = async () => {\r\n        if (!token) {\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('/users/me/');\r\n            setUser(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Auth check error:', error);\r\n            if (error.response?.status === 401) {\r\n                logout();\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkAuth();\r\n    }, [token]);\r\n\r\n    const register = async (email, password, username) => {\r\n        try {\r\n            setError(null);\r\n\r\n            // Debug logging\r\n            console.log('Registration attempt:');\r\n            console.log('Email:', email);\r\n            console.log('Username:', username);\r\n            console.log('Password length:', password.length);\r\n\r\n            // Validate email format\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(email)) {\r\n                throw new Error('Please enter a valid email address');\r\n            }\r\n\r\n            // Validate username\r\n            if (username.length < 3 || username.length > 32) {\r\n                throw new Error('Username must be between 3 and 32 characters long');\r\n            }\r\n\r\n            // Register user\r\n            console.log('Sending registration request...');\r\n            const response = await axios.post('/users/', {\r\n                email,\r\n                password,\r\n                username\r\n            });\r\n            console.log('Registration response:', response.data);\r\n\r\n            // Auto login after successful registration\r\n            await login(email, password);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            const errorMessage = error.response?.data?.detail || error.message;\r\n            setError(errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            setError(null);\r\n\r\n            // Debug logging\r\n            console.log('Login attempt:');\r\n            console.log('Email:', email);\r\n            console.log('Password length:', password.length);\r\n\r\n            // Validate email format\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(email)) {\r\n                throw new Error('Please enter a valid email address');\r\n            }\r\n\r\n            // Login user\r\n            console.log('Sending login request...');\r\n            const response = await axios.post('/token', {\r\n                username: email,\r\n                password: password\r\n            });\r\n            console.log('Login response:', response.data);\r\n\r\n            // Store token\r\n            const token = response.data.access_token;\r\n            localStorage.setItem('token', token);\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n            // Get user data\r\n            const userResponse = await axios.get('/users/me');\r\n            console.log('User data:', userResponse.data);\r\n\r\n            // Update auth state\r\n            setUser(userResponse.data);\r\n            setToken(token);\r\n\r\n            return { success: true, user: userResponse.data };\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            const errorMessage = error.response?.data?.detail || error.message;\r\n            setError(errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n        setError(null);\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        token,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout,\r\n        register,\r\n        setError\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}